{{- if .Values.agent.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "wazuh.indexer.fullname" . }}-agent
  labels:
    app: {{ include "wazuh.indexer.fullname" . }}-agent
    {{- with .Values.agent.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.agent.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.agent.extraSpec.daemonSet }}
  {{- toYaml . | nindent 2 }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ include "wazuh.indexer.fullname" . }}-agent
      node-type: agent
  template:
    metadata:
      name: {{ include "wazuh.indexer.fullname" . }}-agent
      {{- with .Values.agent.podAnnotations }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      labels:
        app: {{ include "wazuh.indexer.fullname" . }}-agent
        node-type: agent
    spec:
      serviceAccountName: {{ include "wazuh.agent.serviceAccountName" . }}
      {{- with .Values.agent.extraSpec.pod }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.agent.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.agent.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.agent.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.agent.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.agent.dnsPolicy }}
      dnsPolicy: {{ .Values.agent.dnsPolicy }}
      {{- end }}
      {{- if .Values.agent.dnsConfig }}
      dnsConfig:
        {{- toYaml .Values.agent.dnsConfig | nindent 8 }}
      {{- end }}
      containers:
        - name: wazuh-agent
          {{- with .Values.agent.extraSpec.container }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          image: {{ .Values.agent.images.repository }}:{{ .Values.agent.images.tag }}
          imagePullPolicy: {{ .Values.agent.images.pullPolicy }}
          ports:
            - name: agent-http
              containerPort: {{ .Values.agent.service.port }}
              protocol: TCP
          {{- with .Values.agent.podSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: JOIN_MANAGER
              value: {{ or .Values.agent.joinManager.managerHost (printf "wazuh.%s.svc.cluster.local" .Release.Namespace) }}
            - name: JOIN_MANAGER_MASTER_HOST
              value: {{ or .Values.agent.joinManager.managerHost (printf "wazuh.%s.svc.cluster.local" .Release.Namespace) }}
            - name: JOIN_MANAGER_WORKER_HOST
              value: {{ or .Values.agent.joinManager.workerHost (printf "%s-manager-worker.wazuh.svc.cluster.local" (include "wazuh.fullname" .)) }}
            - name: JOIN_MANAGER_PROTOCOL
              value: {{ .Values.agent.joinManager.scheme }}
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: JOIN_MANAGER_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.agent.apiCred.existingSecret | default "wazuh-api-cred" }}
                  key: API_USERNAME
            - name: JOIN_MANAGER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.agent.apiCred.existingSecret | default "wazuh-api-cred" }}
                  key: API_PASSWORD
            - name: JOIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.agent.apiCred.existingSecret | default "wazuh-api-cred" }}
                  key: API_PASSWORD
            - name: WAZUH_GROUPS
              value: {{ .Values.agent.joinManager.wazuh.group | quote }}
              {{- if and .Values.wazuh.enabled .Values.wazuh.master.enabled }}
            - name: JOIN_MANAGER_API_PORT
              value: {{ include "wazuh.getPortByName" (dict "portName" "api" "ports" .Values.wazuh.master.service.ports) | quote }}
            - name: JOIN_MANAGER_PORT
              value: {{ include "wazuh.getPortByName" (dict "portName" "agents-events" "ports" .Values.wazuh.worker.service.ports) | quote }}
              {{ else }}
            - name: JOIN_MANAGER_API_PORT
              value: {{ .Values.agent.joinManager.apiPort }}
            - name: JOIN_MANAGER_PORT
              value: {{ .Values.agent.joinManager.agentsEvents }}
              {{- end }}
            - name: HEALTH_CHECK_PROCESSES
              value: "ossec-execd,ossec-syscheckd,ossec-logcollector,wazuh-modulesd,ossec-authd"
          {{- with .Values.agent.livenessProbe }}
          livenessProbe:
            httpGet:
              path: /healz
              port: 5000
            initialDelaySeconds: 40
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5
          {{- end }}
          {{- with .Values.agent.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.agent.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.agent.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
